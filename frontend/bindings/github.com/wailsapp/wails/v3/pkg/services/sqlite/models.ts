// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import {Create as $Create} from "@wailsio/runtime";

export class Config {
    /**
     * DBSource is the database URI to use.
     * The string ":memory:" can be used to create an in-memory database.
     * The sqlite driver can be configured through query parameters.
     * For more details see https://pkg.go.dev/modernc.org/sqlite#Driver.Open
     */
    "DBSource": string;

    /** Creates a new Config instance. */
    constructor($$source: Partial<Config> = {}) {
        if (!("DBSource" in $$source)) {
            this["DBSource"] = "";
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new Config instance from a string or object.
     */
    static createFrom($$source: any = {}): Config {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new Config($$parsedSource as Partial<Config>);
    }
}

/**
 * Row holds a single row in the result of a query.
 * It is a key-value map where keys are column names.
 */
export type Row = { [_: string]: any };

/**
 * Rows holds the result of a query
 * as an array of key-value maps where keys are column names.
 */
export type Rows = Row[];

/**
 * Stmt wraps a prepared sql statement pointer.
 * It provides the same methods as the [sql.Stmt] type.
 */
export type Stmt = string;
