// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Â MODIWL
// This file is automatically generated. DO NOT EDIT

/**
 * ThemeService 主题服务
 * @module
 */

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import {Call as $Call, Create as $Create} from "@wailsio/runtime";

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as application$0 from "../../../github.com/wailsapp/wails/v3/pkg/application/models.js";
// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as models$0 from "../models/models.js";

/**
 * GetAllThemes 获取所有主题
 */
export function GetAllThemes(): Promise<(models$0.Theme | null)[]> & { cancel(): void } {
    let $resultPromise = $Call.ByID(2425053076) as any;
    let $typingPromise = $resultPromise.then(($result: any) => {
        return $$createType2($result);
    }) as any;
    $typingPromise.cancel = $resultPromise.cancel.bind($resultPromise);
    return $typingPromise;
}

/**
 * GetThemeByID 根据ID或名称获取主题
 * 如果 id > 0，按ID查询；如果 id = 0，按名称查询
 */
export function GetThemeByIdOrName(id: number, ...name: string[]): Promise<models$0.Theme | null> & { cancel(): void } {
    let $resultPromise = $Call.ByID(127385338, id, name) as any;
    let $typingPromise = $resultPromise.then(($result: any) => {
        return $$createType1($result);
    }) as any;
    $typingPromise.cancel = $resultPromise.cancel.bind($resultPromise);
    return $typingPromise;
}

/**
 * ResetTheme 重置主题为预设配置
 */
export function ResetTheme(id: number, ...name: string[]): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(1806334457, id, name) as any;
    return $resultPromise;
}

/**
 * ServiceShutdown 服务关闭
 */
export function ServiceShutdown(): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(1676749034) as any;
    return $resultPromise;
}

/**
 * ServiceStartup 服务启动时初始化
 */
export function ServiceStartup(options: application$0.ServiceOptions): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(2915959937, options) as any;
    return $resultPromise;
}

/**
 * UpdateTheme 更新主题
 */
export function UpdateTheme(id: number, colors: models$0.ThemeColorConfig): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(70189749, id, colors) as any;
    return $resultPromise;
}

// Private type creation functions
const $$createType0 = models$0.Theme.createFrom;
const $$createType1 = $Create.Nullable($$createType0);
const $$createType2 = $Create.Array($$createType1);
