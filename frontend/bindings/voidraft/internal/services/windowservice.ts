// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Â MODIWL
// This file is automatically generated. DO NOT EDIT

/**
 * WindowService 窗口管理服务（专注于窗口生命周期管理）
 * @module
 */

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import {Call as $Call, Create as $Create} from "@wailsio/runtime";

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as application$0 from "../../../github.com/wailsapp/wails/v3/pkg/application/models.js";

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as $models from "./models.js";

/**
 * GetOpenWindows 获取所有打开的窗口信息
 */
export function GetOpenWindows(): Promise<$models.WindowInfo[]> & { cancel(): void } {
    let $resultPromise = $Call.ByID(1464997251) as any;
    let $typingPromise = $resultPromise.then(($result: any) => {
        return $$createType1($result);
    }) as any;
    $typingPromise.cancel = $resultPromise.cancel.bind($resultPromise);
    return $typingPromise;
}

/**
 * IsDocumentWindowOpen 检查指定文档的窗口是否已打开
 */
export function IsDocumentWindowOpen(documentID: number): Promise<boolean> & { cancel(): void } {
    let $resultPromise = $Call.ByID(1735611839, documentID) as any;
    return $resultPromise;
}

/**
 * OpenDocumentWindow 为指定文档ID打开新窗口
 */
export function OpenDocumentWindow(documentID: number): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(494716471, documentID) as any;
    return $resultPromise;
}

/**
 * ServiceShutdown 实现服务关闭接口
 */
export function ServiceShutdown(): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(202192783) as any;
    return $resultPromise;
}

/**
 * SetAppReferences 设置应用和主窗口引用
 */
export function SetAppReferences(app: application$0.App | null, mainWindow: application$0.WebviewWindow | null): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(1120840759, app, mainWindow) as any;
    return $resultPromise;
}

/**
 * SetWindowSnapService 设置窗口吸附服务引用
 */
export function SetWindowSnapService(snapService: $models.WindowSnapService | null): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(1105193745, snapService) as any;
    return $resultPromise;
}

// Private type creation functions
const $$createType0 = $models.WindowInfo.createFrom;
const $$createType1 = $Create.Array($$createType0);
