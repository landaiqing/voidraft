// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Â MODIWL
// This file is automatically generated. DO NOT EDIT

/**
 * WindowSnapService 窗口吸附服务
 * @module
 */

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import {Call as $Call, Create as $Create} from "@wailsio/runtime";

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as application$0 from "../../../github.com/wailsapp/wails/v3/pkg/application/models.js";

/**
 * Cleanup 清理资源
 */
export function Cleanup(): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(2155505498) as any;
    return $resultPromise;
}

/**
 * GetCurrentThreshold 获取当前自适应阈值（用于调试或显示）
 */
export function GetCurrentThreshold(): Promise<number> & { cancel(): void } {
    let $resultPromise = $Call.ByID(3176419026) as any;
    return $resultPromise;
}

/**
 * OnWindowSnapConfigChanged 处理窗口吸附配置变更
 */
export function OnWindowSnapConfigChanged(enabled: boolean): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(3794787039, enabled) as any;
    return $resultPromise;
}

/**
 * RegisterWindow 注册需要吸附管理的窗口
 */
export function RegisterWindow(documentID: number, window: application$0.WebviewWindow | null, title: string): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(1000222723, documentID, window, title) as any;
    return $resultPromise;
}

/**
 * ServiceShutdown 实现服务关闭接口
 */
export function ServiceShutdown(): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(1172710495) as any;
    return $resultPromise;
}

/**
 * ServiceStartup 服务启动时初始化
 */
export function ServiceStartup(options: application$0.ServiceOptions): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(2456823262, options) as any;
    return $resultPromise;
}

/**
 * SetSnapEnabled 设置是否启用窗口吸附
 */
export function SetSnapEnabled(enabled: boolean): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(2280126835, enabled) as any;
    return $resultPromise;
}

/**
 * UnregisterWindow 取消注册窗口
 */
export function UnregisterWindow(documentID: number): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(2844230768, documentID) as any;
    return $resultPromise;
}
