// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Â MODIWL
// This file is automatically generated. DO NOT EDIT

/**
 * DocumentService 提供文档管理功能
 * @module
 */

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import {Call as $Call, Create as $Create} from "@wailsio/runtime";

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as models$0 from "../models/models.js";

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as $models from "./models.js";

/**
 * ForceSave 强制保存当前文档
 */
export function ForceSave(): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(2767091023) as any;
    return $resultPromise;
}

/**
 * GetActiveDocument 获取当前活动文档
 */
export function GetActiveDocument(): Promise<models$0.Document | null> & { cancel(): void } {
    let $resultPromise = $Call.ByID(1785823398) as any;
    let $typingPromise = $resultPromise.then(($result: any) => {
        return $$createType1($result);
    }) as any;
    $typingPromise.cancel = $resultPromise.cancel.bind($resultPromise);
    return $typingPromise;
}

/**
 * GetActiveDocumentContent 获取当前活动文档内容
 */
export function GetActiveDocumentContent(): Promise<string> & { cancel(): void } {
    let $resultPromise = $Call.ByID(922617063) as any;
    return $resultPromise;
}

/**
 * GetDiffInfo 获取两个文本之间的详细差异信息
 */
export function GetDiffInfo(oldText: string, newText: string): Promise<$models.DiffResult> & { cancel(): void } {
    let $resultPromise = $Call.ByID(2490726526, oldText, newText) as any;
    let $typingPromise = $resultPromise.then(($result: any) => {
        return $$createType2($result);
    }) as any;
    $typingPromise.cancel = $resultPromise.cancel.bind($resultPromise);
    return $typingPromise;
}

/**
 * GetSaveSettings 获取文档保存设置
 */
export function GetSaveSettings(): Promise<models$0.EditingConfig | null> & { cancel(): void } {
    let $resultPromise = $Call.ByID(4257471801) as any;
    let $typingPromise = $resultPromise.then(($result: any) => {
        return $$createType4($result);
    }) as any;
    $typingPromise.cancel = $resultPromise.cancel.bind($resultPromise);
    return $typingPromise;
}

/**
 * Initialize 初始化文档服务
 */
export function Initialize(): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(3418008221) as any;
    return $resultPromise;
}

/**
 * LoadDefaultDocument 加载默认文档
 */
export function LoadDefaultDocument(): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(2343023569) as any;
    return $resultPromise;
}

/**
 * SaveDocumentSync 同步保存文档内容 (用于页面关闭前同步保存)
 */
export function SaveDocumentSync(content: string): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(3770207288, content) as any;
    return $resultPromise;
}

/**
 * ServiceShutdown 实现应用程序关闭时的服务关闭逻辑
 */
export function ServiceShutdown(): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(638578044) as any;
    return $resultPromise;
}

/**
 * SetSaveCallback 设置保存回调函数
 */
export function SetSaveCallback(callback: any): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(675315211, callback) as any;
    return $resultPromise;
}

/**
 * Shutdown 关闭文档服务，确保所有数据保存
 */
export function Shutdown(): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(3444504909) as any;
    return $resultPromise;
}

/**
 * UpdateActiveDocumentContent 更新当前活动文档内容
 */
export function UpdateActiveDocumentContent(content: string): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(1486276638, content) as any;
    return $resultPromise;
}

/**
 * UpdateSaveSettings 更新文档保存设置
 */
export function UpdateSaveSettings(docConfig: models$0.EditingConfig): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(1245479534, docConfig) as any;
    return $resultPromise;
}

// Private type creation functions
const $$createType0 = models$0.Document.createFrom;
const $$createType1 = $Create.Nullable($$createType0);
const $$createType2 = $models.DiffResult.createFrom;
const $$createType3 = models$0.EditingConfig.createFrom;
const $$createType4 = $Create.Nullable($$createType3);
